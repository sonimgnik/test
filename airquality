#---------------------------------------------------------------- 

#Configure environments 

library(ggplot2) 

  

setwd("/Users/nick/Documents/Syracuse MSBA/2019-0109 IST 687 Applied Data Science/Week6") 

#---------------------------------------------------------------- 

#Step 1: Load the data 

air <- airquality 

  

#---------------------------------------------------------------- 

#Step 2: Clean the data 

any(is.na(air))  

length(air[air=='NA']) 

colnames(air)[colSums(is.na(air))>0] 

  

# Replace NA's with mean of column 

air$Ozone[is.na(air$Ozone)] <- mean(air$Ozone,na.rm=TRUE) # replace NA's in Ozone col with mean of col (where NA is discarded when calculating the mean) 

air$Solar.R[is.na(air$Solar.R)] <- mean(air$Solar.R,na.rm=TRUE) # replace NA's in Solar.R col with mean of col 

  

#---------------------------------------------------------------- 

#Step 3: Understand the data distribution 

  

summary(air) 

names(air) 

  

ggplot(air, aes(x=Ozone)) + geom_histogram() + geom_line(aes(y=Wind)) 

ggplot(air, aes(x=Ozone)) + geom_line(aes(y=Temp)) + geom_histogram() 

p <- ggplot(data=air, aes(x=Ozone, y=Temp, color=Month)) + geom_line() + stat_smooth() 

  

##Generate charts, histogram, box plot, line plot, point plot, and tile plot for heat map 

  

##Histograms for each of the variables 

hist.ozone <- ggplot(air, aes(x=Ozone)) + geom_histogram(binwidth=10,color="white", fill="green4") 

hist.ozone  <- hist.ozone  + ggtitle("Ozone") + theme(plot.title = element_text(hjust = 0.5)) + xlab("OZ") + ylab("Frequency") 

hist.ozone  

ggsave("hist.ozone.png") 

  

hist.solar <- ggplot(air, aes(x=Solar.R)) + geom_histogram(binwidth=20, color="white", fill="red") 

hist.solar   <- hist.solar   + ggtitle("Solar.R") + theme(plot.title = element_text(hjust = 0.5)) + xlab("Solar.R") + ylab("Frequency") 

hist.solar   

ggsave("hist.solar.png") 

  

round(air$Wind, 0) 

hist.wind <- ggplot(air, aes(x=Wind)) + geom_histogram(binwidth=1, color="white", fill="blue") 

hist.wind  <- hist.wind  + ggtitle("Wind") + theme(plot.title = element_text(hjust = 0.5)) + xlab("Wind") + ylab("Frequency") 

hist.wind  

ggsave("hist.wind.png") 

  

hist.temp <- ggplot(air, aes(x=Temp)) + geom_histogram(binwidth=1, color="white", fill="orange") 

hist.temp  <- hist.temp  + ggtitle("Temp") + theme(plot.title = element_text(hjust = 0.5)) + xlab("Temp") + ylab("Frequency") 

hist.temp  

ggsave("hist.temp.png") 

  

##Boxplot for Ozone 

gbox.ozone <- ggplot(air, aes(0,Ozone)) + geom_boxplot()  

gbox.ozone 

ggsave("gbox.ozone.png") 

  

##create a boxplot for wind 

gbox.wind<- ggplot(air, aes(0,Wind)) + geom_boxplot()  

gbox.wind 

ggsave("gbox.wind.png") 

  

#Step 3: Explore how the data changes over time 

##Explore how the data changes over time 

##Paste value in Month and Day columns and 1973 and assign to column "Date" 

air$Date <- paste("1973", air$Month, air$Day, sep="-") 

air$Date <- as.Date(air$Date,"%Y-%m-%d") 

  

str(air) #check structure to see if conversion works 

air <- air[,-5:-6] 

str(air)  

  

##create line charts for ozone, temp, wind and Solar.R 

##line chart for ozone 

gline.ozone <- ggplot(data = air, aes(x=Date, y=Ozone)) + theme_classic(base_size = 10) 

gline.ozone + geom_line(color="green4")  

ggsave("gline.ozone.png") 

  

gline.temp <- ggplot(data = air, aes(x=Date, y=Temp)) + theme_classic(base_size = 10) 

gline.temp + geom_line(color="orange")  

ggsave("gline.temp.png") 

  

gline.wind <- ggplot(data = air, aes(x=Date, y=Wind)) + theme_classic(base_size = 10) 

gline.wind + geom_line(color="blue")  

ggsave("gline.wind.png") 

  

gline.solar <- ggplot(data = air, aes(x=Date, y=Solar.R)) + theme_classic(base_size = 10) 

gline.solar + geom_line(color="red")  

ggsave("gline.solar.png") 

  

##create one chart with 4 lines 

ggplot(air, aes(x=Date)) +  

  geom_line(aes(y=Ozone, color="Ozone")) +  

  geom_line(aes(y=Temp, color="Temp")) +   

  geom_line(aes(y=Wind, color="Wind")) + 

  geom_line(aes(y=Solar.R, color="Solar.R")) +  theme(plot.title=element_text(hjust=.5)) +  

  labs(title="Combined Variables") + scale_color_manual(values=c("green4", "orange", "blue", "red"))   

ggsave("geom_line.png") 

  

#------------------ A different approach 

##use melt function to transform the data frame 

##to use melt install.packages("reshape2")  

library(reshape2) 

airLong <- melt(air, id="Date") 

head(airLong[order(airLong$Date),]) 

  

##create chart with all 4 variables 

gline.all <- ggplot(airLong, aes(x=Date, y=value, color=variable)) + geom_line() 

gline.all # inspect chart 

ggsave("gline.all.png") 

#-------------- End of different approach 

  

#Step 4: Look at all the data via a Heatmap 

htmap <- ggplot(airLong, aes(x=Date, y=variable)) + geom_tile(aes(fill=value)) + scale_fill_gradient(low="white", high="red") 

htmap # inspect heatmap 

ggsave("heatmap.png") 

  

#Step 5: Look at all the data via a scatter chart 

gscatter <- ggplot(air) +  geom_point(aes(x=Wind, y=Temp, size=Ozone, color=Solar.R)) 

gscatter # inspect scatter plot 

ggsave("gscatter.png") 

  

#Step 6: Final Analysis 

##1. Do you see any patterns after exploring the data? 

## - There appears to be some seasonaility to the data. 

## - As temperature rises, wind is less.  Also, as temp rises Ozone value becomes greater. 

  

##2. What was the most useful visualization? 

## - Scatter plot, because it shows multiple variables over time. 

  

  

  

Console log w/plot 

Executed code 

#Homework 6 Submission - Nicholas Toscano 
#IST687 – Viz HW: air quality Analysis 

#Configure environments 
library(ggplot2) 
  
setwd("/Users/nick/Documents/Syracuse MSBA/2019-0109 IST 687 Applied Data Science/Week6") 

#Step 1: Load the data 
air <- airquality 

#Step 2: Clean the data 
any(is.na(air))  

## [1] TRUE 

length(air[air=='NA']) 

## [1] 44 

colnames(air)[colSums(is.na(air))>0] 

## [1] "Ozone"   "Solar.R" 

# Replace NA's with mean of column 
air$Ozone[is.na(air$Ozone)] <- mean(air$Ozone,na.rm=TRUE) # replace NA's in Ozone col with mean of col (where NA is discarded when calculating the mean) 
air$Solar.R[is.na(air$Solar.R)] <- mean(air$Solar.R,na.rm=TRUE) # replace NA's in Solar.R col with mean of col 

#Step 3: Understand the data distribution 
  
summary(air) 

##      Ozone           Solar.R           Wind             Temp       
##  Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00   
##  1st Qu.: 21.00   1st Qu.:120.0   1st Qu.: 7.400   1st Qu.:72.00   
##  Median : 42.13   Median :194.0   Median : 9.700   Median :79.00   
##  Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88   
##  3rd Qu.: 46.00   3rd Qu.:256.0   3rd Qu.:11.500   3rd Qu.:85.00   
##  Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00   
##      Month            Day       
##  Min.   :5.000   Min.   : 1.0   
##  1st Qu.:6.000   1st Qu.: 8.0   
##  Median :7.000   Median :16.0   
##  Mean   :6.993   Mean   :15.8   
##  3rd Qu.:8.000   3rd Qu.:23.0   
##  Max.   :9.000   Max.   :31.0 

names(air) 

## [1] "Ozone"   "Solar.R" "Wind"    "Temp"    "Month"   "Day" 

ggplot(air, aes(x=Ozone)) + geom_histogram() + geom_line(aes(y=Wind)) 

## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 

 

wnoo 
 

ggplot(air, aes(x=Ozone)) + geom_line(aes(y=Temp)) + geom_histogram() 

## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 

d Luel 
 

p <- ggplot(data=air, aes(x=Ozone, y=Temp, color=Month)) + geom_line() + stat_smooth() 
  
##Generate charts, histogram, box plot, line plot, point plot, and tile plot for heat map 
  
##Histograms for each of the variables 
hist.ozone <- ggplot(air, aes(x=Ozone)) + geom_histogram(binwidth=10,color="white", fill="green4") 
hist.ozone  <- hist.ozone  + ggtitle("Ozone") + theme(plot.title = element_text(hjust = 0.5)) + xlab("OZ") + ylab("Frequency") 
hist.ozone  

 

Ozone 
Ù 30- 
 

ggsave("hist.ozone.png") 

## Saving 5 x 4 in image 

hist.solar <- ggplot(air, aes(x=Solar.R)) + geom_histogram(binwidth=20, color="white", fill="red") 
hist.solar   <- hist.solar   + ggtitle("Solar.R") + theme(plot.title = element_text(hjust = 0.5)) + xlab("Solar.R") + ylab("Frequency") 
hist.solar   

 

Solar.R 
Solar.R 
 

ggsave("hist.solar.png") 

## Saving 5 x 4 in image 

round(air$Wind, 0) 

##   [1]  7  8 13 12 14 15  9 14 20  9  7 10  9 11 13 12 12 18 12 10 10 17 10 
##  [24] 12 17 15  8 12 15  6  7  9 10 16  9  9 14 10  7 14 12 11  9  8 14 12 
##  [47] 15 21  9 12 10  6  2  5  6  8  8 10 12 15  8  4  9  9 11  5 11  5  6 
##  [70]  6  7  9 14 15 15 14  7 10  6  5 12  7 10 12  9  8  9 12  7  7  7  9 
##  [93]  7 14  7  7  7  5  4 10  8  9 12 12 12 10 12 10  6  7 11 10 16 14 13 
## [116] 10  3  8  6 10  2  6  6  7  5  3  5  7 16 11 10 11 10 15 16  6 11 12 
## [139]  7 14 10 10  8 13  9 10 10 17  7 13 14  8 12 

hist.wind <- ggplot(air, aes(x=Wind)) + geom_histogram(binwidth=1, color="white", fill="blue") 
hist.wind  <- hist.wind  + ggtitle("Wind") + theme(plot.title = element_text(hjust = 0.5)) + xlab("Wind") + ylab("Frequency") 
hist.wind  

 

Wind 
Wind 
 

ggsave("hist.wind.png") 

## Saving 5 x 4 in image 

hist.temp <- ggplot(air, aes(x=Temp)) + geom_histogram(binwidth=1, color="white", fill="orange") 
hist.temp  <- hist.temp  + ggtitle("Temp") + theme(plot.title = element_text(hjust = 0.5)) + xlab("Temp") + ylab("Frequency") 
hist.temp  

Тетр 
Тет р 
 

ggsave("hist.temp.png") 

## Saving 5 x 4 in image 

##Boxplot for Ozone 
gbox.ozone <- ggplot(air, aes(0,Ozone)) + geom_boxplot()  
gbox.ozone 


 

ggsave("gbox.ozone.png") 

## Saving 5 x 4 in image 

##create a boxplot for wind 
gbox.wind<- ggplot(air, aes(0,Wind)) + geom_boxplot()  
gbox.wind 


 

ggsave("gbox.wind.png") 

## Saving 5 x 4 in image 

#Step 3: Explore how the data changes over time 
##Explore how the data changes over time 
##Paste value in Month and Day columns and 1973 and assign to column "Date" 
air$Date <- paste("1973", air$Month, air$Day, sep="-") 
air$Date <- as.Date(air$Date,"%Y-%m-%d") 
  
str(air) #check structure to see if conversion works 

## 'data.frame':    153 obs. of  7 variables: 
##  $ Ozone  : num  41 36 12 18 42.1 ... 
##  $ Solar.R: num  190 118 149 313 186 ... 
##  $ Wind   : num  7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ... 
##  $ Temp   : int  67 72 74 62 56 66 65 59 61 69 ... 
##  $ Month  : int  5 5 5 5 5 5 5 5 5 5 ... 
##  $ Day    : int  1 2 3 4 5 6 7 8 9 10 ... 
##  $ Date   : Date, format: "1973-05-01" "1973-05-02" ... 

air <- air[,-5:-6] 
str(air)  

## 'data.frame':    153 obs. of  5 variables: 
##  $ Ozone  : num  41 36 12 18 42.1 ... 
##  $ Solar.R: num  190 118 149 313 186 ... 
##  $ Wind   : num  7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ... 
##  $ Temp   : int  67 72 74 62 56 66 65 59 61 69 ... 
##  $ Date   : Date, format: "1973-05-01" "1973-05-02" ... 

##create line charts for ozone, temp, wind and Solar.R 
##line chart for ozone 
gline.ozone <- ggplot(data = air, aes(x=Date, y=Ozone)) + theme_classic(base_size = 10) 
gline.ozone + geom_line(color="green4")  

 

Ozone 
 

ggsave("gline.ozone.png") 

## Saving 5 x 4 in image 

gline.temp <- ggplot(data = air, aes(x=Date, y=Temp)) + theme_classic(base_size = 10) 
gline.temp + geom_line(color="orange")  

 


 

ggsave("gline.temp.png") 

## Saving 5 x 4 in image 

gline.wind <- ggplot(data = air, aes(x=Date, y=Wind)) + theme_classic(base_size = 10) 
gline.wind + geom_line(color="blue")   


 

ggsave("gline.wind.png") 

## Saving 5 x 4 in image 

gline.solar <- ggplot(data = air, aes(x=Date, y=Solar.R)) + theme_classic(base_size = 10) 
gline.solar + geom_line(color="red")  

SolarR 
 

ggsave("gline.solar.png") 

## Saving 5 x 4 in image 

##create one chart with 4 lines 
ggplot(air, aes(x=Date)) +  
  geom_line(aes(y=Ozone, color="Ozone")) +  
  geom_line(aes(y=Temp, color="Temp")) +   
  geom_line(aes(y=Wind, color="Wind")) + 
   geom_line(aes(y=Solar.R, color="Solar.R")) +  theme(plot.title=element_text(hjust=.5)) +  
  labs(title="Combined Variables") + scale_color_manual(values=c("green4", "orange", "blue", "red"))   

Combined Variables 
— Solar.R 
 

ggsave("geom_line.png") 

## Saving 5 x 4 in image 

##use melt function to transform the data frame 
##to use melt install.packages("reshape2")  
library(reshape2) 
airLong <- melt(air, id="Date") 
head(airLong[order(airLong$Date),]) 

##           Date variable value 
## 1   1973-05-01    Ozone  41.0 
## 154 1973-05-01  Solar.R 190.0 
## 307 1973-05-01     Wind   7.4 
## 460 1973-05-01     Temp  67.0 
## 2   1973-05-02    Ozone  36.0 
## 155 1973-05-02  Solar.R 118.0 

##create chart with all 4 variables 
gline.all <- ggplot(airLong, aes(x=Date, y=value, color=variable)) + geom_line() 
gline.all # inspect chart 

mea 
y-aepS 
 

ggsave("gline.all.png") 

## Saving 5 x 4 in image 

#Step 4: Look at all the data via a Heatmap 
htmap <- ggplot(airLong, aes(x=Date, y=variable)) + geom_tile(aes(fill=value)) + scale_fill_gradient(low="white", high="red") 
htmap # inspect heatmap 

 

Temp • 
solar.R• 
May 
value 
Date 
 

 

ggsave("heatmap.png") 

## Saving 5 x 4 in image 

#Step 5: Look at all the data via a scatter chart 
gscatter <- ggplot(air) +  geom_point(aes(x=Wind, y=Temp, size=Ozone, color=Solar.R)) 
gscatter # inspect scatter plot 

 

Ozone 
Solar. R 
Wind 
 

ggsave("gscatter.png") 

## Saving 5 x 4 in image 

#Step 6: Final Analysis 
##1. Do you see any patterns after exploring the data? 
## - There appears to be some seasonaility to the data. 
## - As temperature rises, wind is less.  Also, as temp rises Ozone value becomes greater. 
  
##2. What was the most useful visualization? 
## - Scatter plot, because it shows multiple variables over time. 

  

 
